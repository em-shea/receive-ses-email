AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Receive messages sent to an SES domain and sends a notification message with the email contents to a given email address.
# For this application to work, an SES rule set must first be created to save inbound email message files to an S3 bucket.
# How-to: https://aws.amazon.com/premiumsupport/knowledge-center/ses-receive-inbound-emails/
Parameters:
  # Email address that will receive notifications whenever a new message is received.
  EmailAddress:
    Type: String
  # SES verified domain that will send the notification emails
  EmailDomain:
    Type: String
  # S3 bucket where received email messages will be stored, triggering this workflow
  EmailBucketName:
    Type: String

Resources:
  # Lambda function that is triggered when a new file is created in an S3 bucket
  # Function parses the file contents and send the content using SES
  ReceiveEmail:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: ReceiveEmail
      Handler: receive_email.lambda_handler
      Runtime: python3.7
      Timeout: 120
      Policies:
      - SESCrudPolicy:
          IdentityName: !Ref EmailDomain
      - S3ReadPolicy:
          BucketName: !Ref EmailBucketName
      Environment:
        Variables:
          EMAIL_ADDRESS: !Ref EmailAddress
          EMAIL_DOMAIN: !Ref EmailDomain
      Events:
        ReceiveEmailEvent:
          Type: S3
          Properties:
            Bucket: !Ref ReceiveEmailBucket
            Events: s3:ObjectCreated:*
  
  # Bucket where files are created whenever a new email message is sent to the domain name
  ReceiveEmailBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref EmailBucketName
  
  # S3 policy that enables SES to put incoming emails into the bucket as files
  ReceiveEmailBucketSESPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:  
      Bucket:  
        Ref: ReceiveEmailBucket 
      PolicyDocument:  
        Version: 2012-10-17
        Statement:  
        - Sid: ReceiveEmailBucketSESPolicy
          Action: s3:PutObject
          Effect: Allow
          Resource: !Sub arn:aws:s3:::${EmailBucketName}/*
          Principal: 
            Service: ses.amazonaws.com 